"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5115],{8827:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-da862436",path:"/page/css/cssAnimation.html",title:"弧度菜单说明",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"代码解析关键内容xy",slug:"代码解析关键内容xy",children:[]},{level:3,title:"如何控制其实方向",slug:"如何控制其实方向",children:[]}],filePathRelative:"page/css/cssAnimation.md",git:{updatedTime:1637567472e3,contributors:[{name:"liu-bluesky",email:"229236940@qq.com",commits:1}]}}},4255:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var t=a(6252);const p=(0,t._)("h1",{id:"弧度菜单说明",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#弧度菜单说明","aria-hidden":"true"},"#"),(0,t.Uk)(" 弧度菜单说明")],-1),o=(0,t.Uk)("demo地址 ："),e={href:"https://github.com/liu-bluesky/-menu_arc.git",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("https://github.com/liu-bluesky/-menu_arc.git"),l=(0,t.uE)('<ul><li>$(&quot;#navs&quot;) 外曾大盒子</li><li>$(&quot;#navs li&quot;) 菜单显示盒子 ==求x、y轴公式==</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token function">x1</span><span class="token punctuation">(</span>x轴坐标<span class="token punctuation">)</span> <span class="token operator">=</span> x0 <span class="token operator">+</span>半径 <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span>角度 <span class="token operator">*</span> <span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">)</span> \n y1（x轴坐标） <span class="token operator">=</span> y0 <span class="token operator">+</span> 半径 <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span>角度 <span class="token operator">*</span> <span class="token constant">PI</span> <span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> ul<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#navs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>li<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#navs li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span>li<span class="token punctuation">.</span>length<span class="token punctuation">,</span>n<span class="token operator">=</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">;</span>\n\tul<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>a<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t\t\tli<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token string-property property">&#39;transition-delay&#39;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token string-property property">&#39;-webkit-transition-delay&#39;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token string-property property">&#39;-o-transition-delay&#39;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token operator">*</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token string-property property">&#39;transform&#39;</span><span class="token operator">:</span><span class="token string">&quot;translate(&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span>r<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token operator">/</span>n<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;px,&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token operator">/</span>n<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;px&quot;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token comment">// &#39;-webkit-transform&#39;:&quot;translate(&quot;+(r*Math.cos(90/n*a*(Math.PI/180)))+&quot;px,&quot;+(-r*Math.sin(90/n*a*(Math.PI/180)))+&quot;px&quot;,</span>\n\t\t\t\t\t<span class="token comment">// &#39;-o-transform&#39;:&quot;translate(&quot;+(r*Math.cos(90/n*a*(Math.PI/180)))+&quot;px,&quot;+(-r*Math.sin(90/n*a*(Math.PI/180)))+&quot;px&quot;,</span>\n\t\t\t\t\t<span class="token comment">// &#39;-ms-transform&#39;:&quot;translate(&quot;+(r*Math.cos(90/n*a*(Math.PI/180)))+&quot;px,&quot;+(-r*Math.sin(90/n*a*(Math.PI/180)))+&quot;px&quot;</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token punctuation">}</span>\n\t\t<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n\t\t\tli<span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>$<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="代码解析关键内容xy" tabindex="-1"><a class="header-anchor" href="#代码解析关键内容xy" aria-hidden="true">#</a> 代码解析关键内容xy</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">cos求的是x轴</span>\n<span class="token punctuation">(</span>r<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token operator">/</span>n<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token literal-property property">n</span> <span class="token operator">:</span>表示分了几份 这里就是把<span class="token number">90</span>度角份了 n份 即x轴坐标分了n个坐标点\nMath<span class="token punctuation">.</span><span class="token function">sin求的是y</span>\n<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token operator">/</span>n<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token literal-property property">n</span> <span class="token operator">:</span>表示分了几份 这里就是把<span class="token number">90</span>度角份了 n份 即y轴坐标分了n个坐标点\ny是负数 图像就在中心的右上\ny是正数，图像就在右下\n具体原因自己看 translate 原理\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="如何控制其实方向" tabindex="-1"><a class="header-anchor" href="#如何控制其实方向" aria-hidden="true">#</a> 如何控制其实方向</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    顺时针\n    y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    逆时针\n    x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',7),u={},r=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[o,(0,t._)("a",e,[c,(0,t.Wm)(a)])]),l],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);