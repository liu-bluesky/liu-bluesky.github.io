"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2738],{2969:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-4c6f5d8e",path:"/page/js/Frontmatter.html",title:"前端知识模块",lang:"zh-CN",frontmatter:{lang:"zh-CN",home:!1,title:"前端知识模块",description:"跟前端密切相关的笔记资料",sidebar:[{text:"js 函数方法",children:[{text:"tool & echarts 数据处理集",link:"/page/js/function/tool"},{text:"常用正则",link:"/page/js/function/rule"},{text:"html复制功能",link:"/page/js/function/Socket"},{text:"h5 Socket",link:"/page/js/function/Socket"},{text:"监听页面回退事件",link:"/page/js/function/pushState"},{text:"a 标签下载",link:"/page/js/function/download"},{sidebarDepth:0,text:"时间格式化",link:"/page/js/function/formatDate"},{text:"滑动穿透解决",link:"/page/js/h5/SlipThrough"},{text:"加载本地图片",link:"/page/js/h5/loadimg"},{text:"require 用法 ",link:"/page/js/requireDIY/require"}]},{text:"h5",children:[{sidebarDepth:0,text:"h5人脸识别/人脸检测",link:"/page/js/h5/faceRecognition"},{text:"滑动穿透解决",link:"/page/js/h5/SlipThrough"},{text:"加载本地图片",link:"/page/js/h5/loadimg"},{text:"复制功能",link:"/page/js/h5/copy"}]},{text:"算法",children:[{text:"去重",link:"/page/js/algorithm/duplicateRemoval"},{text:"sku商品规格",link:"/page/js/algorithm/sku"},{text:"form表单多维对象赋值",link:"/page/js/algorithm/formAssignment"}]},{text:"插件",children:[{text:"监控视频推送解决方案",link:"/page/js/plug-in/VideoSurveillance"},{text:"pkg Node打包exe",link:"/page/js/plug-in/pkg"},{text:"xlsx转JSON",link:"/page/js/plug-in/xlsxToJson"},{text:"jsonToXlsx",link:"/page/js/plug-in/jsonToXlsx"},{text:"校验数据是否有空",link:"/page/js/plug-in/llt_is_null"},{text:"jspdf-html2canvas",link:"/page/js/plug-in/jspdf-html2canvas"},{text:"nrm快速切换镜像地址",link:"/page/js/plug-in/nrm"},{text:"konva",link:"/page/js/plug-in/konva"},{text:"ace 浏览器代码编辑器",link:"/page/js/plug-in/ace"}]}]},excerpt:"",headers:[{level:2,title:"canvas",slug:"canvas",children:[{level:3,title:"通过canvas 导出指定左边图片",slug:"通过canvas-导出指定左边图片",children:[]}]},{level:2,title:"去除html标签 只保留文本",slug:"去除html标签-只保留文本",children:[]}],filePathRelative:"page/js/Frontmatter.md",git:{updatedTime:1721026802e3,contributors:[{name:"llt18336465466",email:"229236940@qq.com",commits:9},{name:"blue",email:"229236940@qq.com",commits:6},{name:"liu-bluesky",email:"229236940@qq.com",commits:4}]}}},6973:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});var t=a(6252);const e={},p=(0,a(3744).Z)(e,[["render",function(n,s){return s[0]||(s[0]=(0,t.uE)('<h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h2><h3 id="通过canvas-导出指定左边图片" tabindex="-1"><a class="header-anchor" href="#通过canvas-导出指定左边图片" aria-hidden="true">#</a> 通过canvas 导出指定左边图片</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> imageObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  imageObj<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 解决跨域 Canvas 污染问题</span>\n    imageObj<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;crossOrigin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;anonymous&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> imageObj<span class="token punctuation">.</span>width<span class="token punctuation">;</span>\n    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> imageObj<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token literal-property property">context</span><span class="token operator">:</span> any <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// image：要绘制的图片，支持很多形式，比如CSSImageValue，HTMLImageElement，SVGImageElement，HTMLVideoElement，HTMLCanvasElement，ImageBitmap 或者OffscreenCanvas</span>\n    <span class="token comment">// dx：d代表目的（destination），就是canvas上起点的x轴</span>\n    <span class="token comment">// dy：canvas上起点的y轴</span>\n    <span class="token comment">// dWidth：canvas上绘制的宽度</span>\n    <span class="token comment">// dHeight：canvas上绘制的高度</span>\n    <span class="token comment">// sx：s代表原来的（source），就是原始图片的起点的x轴</span>\n    <span class="token comment">// sy：原始图片的起点的y轴</span>\n    <span class="token comment">// sWidth：截取的原始图片的宽度</span>\n    <span class="token comment">// sHeight：截取的原始图片的高度</span>\n    context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>imageObj<span class="token punctuation">,</span> <span class="token number">308</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">308</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> url <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&quot;image/png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//得到图片的base64编码数据</span>\n    <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;stage.png&quot;</span><span class="token punctuation">;</span>\n    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  imageObj<span class="token punctuation">.</span>src <span class="token operator">=</span> dataURL<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="去除html标签-只保留文本" tabindex="-1"><a class="header-anchor" href="#去除html标签-只保留文本" aria-hidden="true">#</a> 去除html标签 只保留文本</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">delHtmlTag</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^&gt;]+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去掉所有的html标记</span>\n<span class="token punctuation">}</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',5))}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);