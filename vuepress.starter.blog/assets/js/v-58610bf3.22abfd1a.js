"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6534],{4833:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-58610bf3",path:"/page/vue/elementPlus.html",title:"element-plus报错内容",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"page/vue/elementPlus.md",git:{updatedTime:1637567472e3,contributors:[{name:"liu-bluesky",email:"229236940@qq.com",commits:1}]}}},3116:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="element-plus报错内容" tabindex="-1"><a class="header-anchor" href="#element-plus报错内容" aria-hidden="true">#</a> element-plus报错内容</h1><blockquote><p>报错原因如下 vue-tsc 是对ts类型做检测的 element对ts支持并不是很友好所以报错 但是不影响正常使用</p></blockquote><p>Cannot find name &#39;Nullable&#39;. Cannot find name &#39;ComponentSize&#39;. 解决办法</p><p>package.json文件修改build参数删改成下面参数</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h1 id="别名引入报错问题" tabindex="-1"><a class="header-anchor" href="#别名引入报错问题" aria-hidden="true">#</a> 别名引入报错问题</h1><ol><li>tsconfig.json 文件添加如下代码</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code> <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;@ts/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;./src/*&quot;</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>vite.config.ts 文件中的resolve.alias添加如下配置</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>  <span class="token punctuation">{</span>\n        find<span class="token operator">:</span> /\\/@ts\\<span class="token comment">//,</span>\n        replacement<span class="token operator">:</span> pathResolve(&#39;src&#39;) + &#39;/&#39;<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>引入方式</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> key <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@ts/store/index&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我的配置文件如下</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n   <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n     <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>\n     <span class="token string">&quot;dom&quot;</span>\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n     <span class="token string">&quot;vite/client&quot;</span>\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n     <span class="token property">&quot;/@ts/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n       <span class="token string">&quot;./src/*&quot;</span>\n     <span class="token punctuation">]</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n <span class="token punctuation">}</span><span class="token punctuation">,</span>\n <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n   <span class="token string">&quot;src/**/*.ts&quot;</span><span class="token punctuation">,</span>\n   <span class="token string">&quot;src/**/*.d.ts&quot;</span><span class="token punctuation">,</span>\n   <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span>\n   <span class="token string">&quot;src/**/*.vue&quot;</span>\n <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>',14),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);