"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4764],{8614:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-b66e7dba",path:"/page/vue/electronVite.html",title:"vue项目改electron",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"vue环境",slug:"vue环境",children:[]},{level:2,title:"安装依赖",slug:"安装依赖",children:[]},{level:2,title:"修改前目录结构",slug:"修改前目录结构",children:[]},{level:2,title:"修改后目录结构",slug:"修改后目录结构",children:[]},{level:2,title:"新增文件",slug:"新增文件",children:[{level:3,title:"main.js",slug:"main-js",children:[]},{level:3,title:"preload.js",slug:"preload-js",children:[]},{level:3,title:"electron-builder.json",slug:"electron-builder-json",children:[]}]},{level:2,title:"修改 package.json",slug:"修改-package-json",children:[]},{level:2,title:"注意事项",slug:"注意事项",children:[]},{level:2,title:"案例地址",slug:"案例地址",children:[]}],filePathRelative:"page/vue/electronVite.md",git:{updatedTime:1685440785e3,contributors:[{name:"liu-bluesky",email:"229236940@qq.com",commits:3},{name:"blue",email:"229236940@qq.com",commits:1}]}}},8563:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var p=a(6252);const t=(0,p._)("h1",{id:"vue项目改electron",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#vue项目改electron","aria-hidden":"true"},"#"),(0,p.Uk)(" vue项目改electron")],-1),e=(0,p._)("h2",{id:"vue环境",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#vue环境","aria-hidden":"true"},"#"),(0,p.Uk)(" vue环境")],-1),o=(0,p.uE)('<h2 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> -D  cross-env  <span class="token comment">#解决环境变量</span>\n<span class="token function">yarn</span> <span class="token function">add</span> -D wait-on <span class="token comment">#延迟加载 监听作用</span>\n<span class="token function">yarn</span> <span class="token function">add</span> -D electron \n<span class="token function">yarn</span> <span class="token function">add</span> -D  concurrently\n<span class="token function">yarn</span> <span class="token function">add</span> -D  electron-builder <span class="token comment">#打包工具</span>\n\n<span class="token comment"># 或者这种方式</span>\n<span class="token function">yarn</span> <span class="token function">add</span> -D cross-env wait-on electron@17.0.1 electron-builder@23.0.3  concurrently\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="修改前目录结构" tabindex="-1"><a class="header-anchor" href="#修改前目录结构" aria-hidden="true">#</a> 修改前目录结构</h2><blockquote><p>这是正常vue的目录结构</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>|—— dist                     # 打包路径\n|—— public                   # 公共文件\n|—— scr                      # 源代码\n|—— package.json              \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="修改后目录结构" tabindex="-1"><a class="header-anchor" href="#修改后目录结构" aria-hidden="true">#</a> 修改后目录结构</h2><blockquote><p>这是正常vue的目录结构</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>|—— dist                     # 打包路径\n|—— electron                 # 配置文件 以及入口文件\n|   |—— main.js              # 入口文件\n|   |—— preload.js           # api接口注入预加载文件\n|—— public                   # 公共文件\n|—— scr                      # 源代码\n|—— package.json          \n|—— electron-builder.json    # 打包配置文件      \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="新增文件" tabindex="-1"><a class="header-anchor" href="#新增文件" aria-hidden="true">#</a> 新增文件</h2><h3 id="main-js" tabindex="-1"><a class="header-anchor" href="#main-js" aria-hidden="true">#</a> main.js</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// main.js</span>\n\n<span class="token comment">// 控制应用生命周期和创建原生浏览器窗口的模组</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow<span class="token punctuation">,</span> ipcMain<span class="token punctuation">,</span>dialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token constant">NODE_ENV</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span>\n<span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 创建浏览器窗口</span>\n  <span class="token keyword">const</span> mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">preload</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;preload.js&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 加载 index.html</span>\n    mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span>\n      <span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span>\n        <span class="token operator">?</span> <span class="token string">&#39;http://localhost:3003&#39;</span>\n        <span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">file://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist/index.html&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  \n    <span class="token comment">// 打开开发工具</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> iconName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;/public/drag-and-drop.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 这段程序将会在 Electron 结束初始化</span>\n<span class="token comment">// 和创建浏览器窗口</span>\nipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ondragstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;filePath :&gt;&gt; &#39;</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  event<span class="token punctuation">.</span>sender<span class="token punctuation">.</span><span class="token function">startDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">file</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">icon</span><span class="token operator">:</span> iconName<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open-directory-dialog&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  dialog<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\n    <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">[</span>p<span class="token punctuation">]</span>\n\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    event<span class="token punctuation">.</span>sender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;selectedItem&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>filePaths<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 部分 API 在 ready 事件触发后才能使用。</span>\napp<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;activate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通常在 macOS 上，当点击 dock 中的应用程序图标时，如果没有其他</span>\n    <span class="token comment">// 打开的窗口，那么程序会重新创建一个窗口。</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>BrowserWindow<span class="token punctuation">.</span><span class="token function">getAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 除了 macOS 外，当所有窗口都被关闭的时候退出程序。 因此，通常对程序和它们在</span>\n<span class="token comment">// 任务栏上的图标来说，应当保持活跃状态，直到用户使用 Cmd + Q 退出。</span>\napp<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;window-all-closed&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">!==</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">)</span> app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 在这个文件中，你可以包含应用程序剩余的所有部分的代码，</span>\n<span class="token comment">// 也可以拆分成几个文件，然后用 require 导入。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><h3 id="preload-js" tabindex="-1"><a class="header-anchor" href="#preload-js" aria-hidden="true">#</a> preload.js</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> contextBridge<span class="token punctuation">,</span> ipcRenderer<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">replaceText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">)</span> element<span class="token punctuation">.</span>innerText <span class="token operator">=</span> text\n    <span class="token punctuation">}</span>\n  \n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dependency <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;chrome&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;electron&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">replaceText</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dependency<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-version</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>versions<span class="token punctuation">[</span>dependency<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="electron-builder-json" tabindex="-1"><a class="header-anchor" href="#electron-builder-json" aria-hidden="true">#</a> electron-builder.json</h3><blockquote><p>不要使用中文</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code> <span class="token punctuation">{</span>  <span class="token comment">// electron-builder配置</span>\n    <span class="token property">&quot;productName&quot;</span><span class="token operator">:</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span><span class="token comment">//项目名 这也是生成的exe文件的前缀名</span>\n    <span class="token property">&quot;appId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxxx&quot;</span><span class="token punctuation">,</span><span class="token comment">//包名  </span>\n    <span class="token property">&quot;copyright&quot;</span><span class="token operator">:</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span><span class="token comment">//版权  信息</span>\n    <span class="token property">&quot;compression&quot;</span><span class="token operator">:</span> <span class="token string">&quot;store&quot;</span><span class="token punctuation">,</span> <span class="token comment">// &quot;store&quot; | &quot;normal&quot;| &quot;maximum&quot; 打包压缩情况(store 相对较快)，store 39749kb, maximum 39186kb</span>\n    <span class="token property">&quot;directories&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build&quot;</span> <span class="token comment">// 输出文件夹</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;asar&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// asar打包</span>\n    <span class="token property">&quot;extraResources&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span> <span class="token comment">// 拷贝dll等静态文件到指定位置</span>\n        <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./app-update.yml&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./b.txt&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;win&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>  \n        <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx/icon.ico&quot;</span><span class="token comment">//图标路径,</span>\n        <span class="token property">&quot;extraResources&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span> <span class="token comment">// 拷贝dll等静态文件到指定位置(用于某个系统配置)</span>\n            <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./app-update.yml&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./b.txt&quot;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;nsis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;oneClick&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 一键安装</span>\n        <span class="token property">&quot;guid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span> <span class="token comment">//注册表名字，不推荐修改</span>\n        <span class="token property">&quot;perMachine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否开启安装时权限限制（此电脑或当前用户）</span>\n        <span class="token property">&quot;allowElevation&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。</span>\n        <span class="token property">&quot;allowToChangeInstallationDirectory&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许修改安装目录</span>\n        <span class="token property">&quot;installerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build/icons/aaa.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 安装图标</span>\n        <span class="token property">&quot;uninstallerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build/icons/bbb.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">//卸载图标</span>\n        <span class="token property">&quot;installerHeaderIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build/icons/aaa.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 安装时头部图标</span>\n        <span class="token property">&quot;createDesktopShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 创建桌面图标</span>\n        <span class="token property">&quot;createStartMenuShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 创建开始菜单图标</span>\n        <span class="token property">&quot;shortcutName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxx&quot;</span> <span class="token comment">// 图标名称</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="修改-package-json" tabindex="-1"><a class="header-anchor" href="#修改-package-json" aria-hidden="true">#</a> 修改 package.json</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code> <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron/main.js&quot;</span><span class="token punctuation">,</span><span class="token comment">//新增内容 这个是新建的main.js 路径</span>\n <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n   <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wait-on tcp:3003 &amp;&amp; cross-env NODE_ENV=development electron .&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;electron:serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;concurrently -k \\&quot;yarn dev\\&quot; \\&quot;yarn electron\\&quot;&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;electron:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build &amp;&amp; electron-builder&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;electron-builder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ol><li>main.js</li></ol><blockquote><p>mainWindow.loadURL(&quot;http://localhost:3000/&quot;) 3000端口与配置文件保持一致</p></blockquote><ol start="2"><li>建议 vite.config.ts 端口配置一个不冲突的端口</li></ol><h2 id="案例地址" tabindex="-1"><a class="header-anchor" href="#案例地址" aria-hidden="true">#</a> 案例地址</h2>',23),c={href:"https://gitee.com/blueskyliu/low-code-platform",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("案例地址"),u=(0,p._)("blockquote",null,[(0,p._)("p",null,"源码 分支切换到 electron")],-1),r={},i=(0,a(3744).Z)(r,[["render",function(n,s){const a=(0,p.up)("ProjectREADME"),r=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,(0,p.Wm)(a,{data:[{name:"vue",value:"3.2.31"},{name:"vite",value:"2.8.3"},{name:"electron",value:"17.0.1"},{name:"concurrently",value:"7.0.0"},{name:"electron-builder",value:"22.14.5"}]},null,8,["data"]),o,(0,p._)("p",null,[(0,p._)("a",c,[l,(0,p.Wm)(r)])]),u],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);