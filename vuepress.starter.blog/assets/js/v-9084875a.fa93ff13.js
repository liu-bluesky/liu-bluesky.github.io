"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9075],{6683:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-9084875a",path:"/page/git/Frontmatter.html",title:"git 常用命令",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"git 常用命令"},excerpt:"",headers:[{level:2,title:"git 常用命令",slug:"git-常用命令",children:[]},{level:2,title:"仓库操作",slug:"仓库操作",children:[{level:3,title:"初始化本地仓库",slug:"初始化本地仓库",children:[]},{level:3,title:"克隆远程仓库",slug:"克隆远程仓库",children:[]},{level:3,title:"添加文件到暂存区",slug:"添加文件到暂存区",children:[]},{level:3,title:"提交暂存区的文件到本地仓库",slug:"提交暂存区的文件到本地仓库",children:[]},{level:3,title:"查看提交历史",slug:"查看提交历史",children:[]},{level:3,title:"查看分支",slug:"查看分支",children:[]},{level:3,title:"创建分支",slug:"创建分支",children:[]},{level:3,title:"切换分支",slug:"切换分支",children:[]},{level:3,title:"合并分支",slug:"合并分支",children:[]},{level:3,title:"删除分支",slug:"删除分支",children:[]},{level:3,title:"查看远程仓库信息",slug:"查看远程仓库信息",children:[]},{level:3,title:"添加远程仓库",slug:"添加远程仓库",children:[]},{level:3,title:"拉取远程仓库的更新",slug:"拉取远程仓库的更新",children:[]},{level:3,title:"推送本地分支到远程仓库",slug:"推送本地分支到远程仓库",children:[]},{level:3,title:"把当前修改内容 合并到指定分支",slug:"把当前修改内容-合并到指定分支",children:[]},{level:3,title:"合并特定内容",slug:"合并特定内容",children:[]}]}],filePathRelative:"page/git/Frontmatter.md",git:{updatedTime:1745551074e3,contributors:[{name:"blue",email:"229236940@qq.com",commits:1}]}}},3922:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});var e=a(6252);const l={},t=(0,a(3744).Z)(l,[["render",function(s,n){return n[0]||(n[0]=(0,e.uE)('<h2 id="git-常用命令" tabindex="-1"><a class="header-anchor" href="#git-常用命令" aria-hidden="true">#</a> git 常用命令</h2><h1 id="git-常用命令-1" tabindex="-1"><a class="header-anchor" href="#git-常用命令-1" aria-hidden="true">#</a> Git 常用命令</h1><h2 id="仓库操作" tabindex="-1"><a class="header-anchor" href="#仓库操作" aria-hidden="true">#</a> 仓库操作</h2><h3 id="初始化本地仓库" tabindex="-1"><a class="header-anchor" href="#初始化本地仓库" aria-hidden="true">#</a> 初始化本地仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> init  <span class="token comment"># 在当前目录下初始化一个新的 Git 仓库</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="克隆远程仓库" tabindex="-1"><a class="header-anchor" href="#克隆远程仓库" aria-hidden="true">#</a> 克隆远程仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token operator">&lt;</span>远程仓库地址<span class="token operator">&gt;</span>  <span class="token comment"># 从远程仓库克隆项目到本地</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="添加文件到暂存区" tabindex="-1"><a class="header-anchor" href="#添加文件到暂存区" aria-hidden="true">#</a> 添加文件到暂存区</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>文件名<span class="token operator">&gt;</span>  <span class="token comment"># 将指定文件添加到暂存区</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>  <span class="token comment"># 将当前目录下的所有修改和新增文件添加到暂存区</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="提交暂存区的文件到本地仓库" tabindex="-1"><a class="header-anchor" href="#提交暂存区的文件到本地仓库" aria-hidden="true">#</a> 提交暂存区的文件到本地仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> commit -m <span class="token string">&quot;提交信息&quot;</span>  <span class="token comment"># 提交暂存区的文件到本地仓库，并添加提交信息</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="查看提交历史" tabindex="-1"><a class="header-anchor" href="#查看提交历史" aria-hidden="true">#</a> 查看提交历史</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> log  <span class="token comment"># 查看详细的提交历史</span>\n<span class="token function">git</span> log --oneline  <span class="token comment"># 查看简洁的提交历史</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="查看分支" tabindex="-1"><a class="header-anchor" href="#查看分支" aria-hidden="true">#</a> 查看分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> branch  <span class="token comment"># 查看本地分支</span>\n<span class="token function">git</span> branch -r  <span class="token comment"># 查看远程分支</span>\n<span class="token function">git</span> branch -a  <span class="token comment"># 查看所有分支（包括本地和远程）</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="创建分支" tabindex="-1"><a class="header-anchor" href="#创建分支" aria-hidden="true">#</a> 创建分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 创建一个新的本地分支</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="切换分支" tabindex="-1"><a class="header-anchor" href="#切换分支" aria-hidden="true">#</a> 切换分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 切换到指定分支</span>\n<span class="token function">git</span> checkout -b <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 创建并切换到新的分支</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="合并分支" tabindex="-1"><a class="header-anchor" href="#合并分支" aria-hidden="true">#</a> 合并分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> merge <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 将指定分支合并到当前分支</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="删除分支" tabindex="-1"><a class="header-anchor" href="#删除分支" aria-hidden="true">#</a> 删除分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> branch -d <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 删除本地已合并的分支</span>\n<span class="token function">git</span> branch -D <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 强制删除本地未合并的分支</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="查看远程仓库信息" tabindex="-1"><a class="header-anchor" href="#查看远程仓库信息" aria-hidden="true">#</a> 查看远程仓库信息</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> remote -v  <span class="token comment"># 查看远程仓库的详细信息</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="添加远程仓库" tabindex="-1"><a class="header-anchor" href="#添加远程仓库" aria-hidden="true">#</a> 添加远程仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> <span class="token operator">&lt;</span>远程仓库别名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>远程仓库地址<span class="token operator">&gt;</span>  <span class="token comment"># 添加一个远程仓库，并指定别名</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="拉取远程仓库的更新" tabindex="-1"><a class="header-anchor" href="#拉取远程仓库的更新" aria-hidden="true">#</a> 拉取远程仓库的更新</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> pull <span class="token operator">&lt;</span>远程仓库别名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 从远程仓库拉取指定分支的更新，并合并到当前分支</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="推送本地分支到远程仓库" tabindex="-1"><a class="header-anchor" href="#推送本地分支到远程仓库" aria-hidden="true">#</a> 推送本地分支到远程仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token operator">&lt;</span>远程仓库别名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 将本地指定分支推送到远程仓库</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="把当前修改内容-合并到指定分支" tabindex="-1"><a class="header-anchor" href="#把当前修改内容-合并到指定分支" aria-hidden="true">#</a> 把当前修改内容 合并到指定分支</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> stash\n<span class="token function">git</span> checkout <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>\n<span class="token function">git</span> stash pop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="合并特定内容" tabindex="-1"><a class="header-anchor" href="#合并特定内容" aria-hidden="true">#</a> 合并特定内容</h3><blockquote><p>git cherry-pick 是 Git 里一个相当实用的命令，其作用是把其他分支里的特定提交应用到当前分支。这在你只需某几个提交而不想合并整个分支时极为有用。下面为你详细介绍该命令的使用场景、基本语法和示例。 使用场景 引入特定功能：当你只需要另一个分支里的部分提交所带来的功能，而不想把整个分支合并过来时，就可以用 git cherry-pick。 修复问题：若某个分支上的提交修复了特定的问题，你可以通过 git cherry-pick 将该提交应用到其他需要修复的分支。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> cherry-pick <span class="token operator">&lt;</span>commit-hash<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>commit-hash<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.\n\n步骤 <span class="token number">1</span>：查看提交历史\n先切换到 feature 分支，查看提交历史，找出你想要应用的提交的哈希值。\n<span class="token function">bash</span>\n<span class="token function">git</span> checkout feature\n<span class="token function">git</span> log --oneline\n\n输出示例：\nplaintext\nabcdef1 <span class="token punctuation">(</span>HEAD -<span class="token operator">&gt;</span> feature<span class="token punctuation">)</span> Add new feature\n<span class="token number">1234567</span> Update documentation\n\n假设你想把 abcdef1 这个提交应用到 main 分支。\n步骤 <span class="token number">2</span>：切换到目标分支\n<span class="token function">bash</span>\n<span class="token function">git</span> checkout main\n\n步骤 <span class="token number">3</span>：应用指定提交\n<span class="token function">bash</span>\n<span class="token function">git</span> cherry-pick abcdef1\n\n若应用成功，main 分支就会包含 abcdef1 提交所做的更改。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',36))}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);