"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4422],{275:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5378acb2",path:"/page/js/plug-in/llt_is_null.html",title:"判断数据是否为空",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"支持复杂数据类型",slug:"支持复杂数据类型",children:[]}],filePathRelative:"page/js/plug-in/llt_is_null.md",git:{updatedTime:1637567472e3,contributors:[{name:"liu-bluesky",email:"229236940@qq.com",commits:1}]}}},9158:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const e=(0,p._)("h1",{id:"判断数据是否为空",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#判断数据是否为空","aria-hidden":"true"},"#"),(0,p.Uk)(" 判断数据是否为空")],-1),t=(0,p._)("h3",{id:"支持复杂数据类型",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#支持复杂数据类型","aria-hidden":"true"},"#"),(0,p.Uk)(" 支持复杂数据类型")],-1),l={href:"https://www.npmjs.com/package/llt_is_null",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("llt_is_null"),o=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>is_data_null<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;llt_is_null&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">var</span> opj1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token string">&#39;[1,2]&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">sada</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">a2</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;a&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        \n  <span class="token punctuation">}</span>\n    <span class="token keyword">var</span> opj2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>\n    \n        <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token doc-comment comment">/**\n   *参数1  需要判断的字段 \n   * 参数2 需要过滤的字段\n   * 参数全部都是对象格式\n   *  */</span>\n \n  \tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">is_data_null</span><span class="token punctuation">(</span>opj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h1 id="发布npm命令" tabindex="-1"><a class="header-anchor" href="#发布npm命令" aria-hidden="true">#</a> 发布NPM命令</h1><div class="language-npm ext-npm line-numbers-mode"><pre class="language-npm"><code>npm login\n//登录之后执行命令\n\nnpm publish\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',3),c={},u=(0,a(3744).Z)(c,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,t,(0,p._)("p",null,[(0,p._)("a",l,[r,(0,p.Wm)(a)])]),o],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);