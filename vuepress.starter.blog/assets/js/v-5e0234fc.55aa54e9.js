"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3859],{7264:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5e0234fc",path:"/page/js/function/formatDate.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"格式化当前时间",slug:"格式化当前时间",children:[]}],filePathRelative:"page/js/function/formatDate.md",git:{updatedTime:1649831379e3,contributors:[{name:"llt18336465466",email:"229236940@qq.com",commits:1}]}}},3868:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var t=a(6252);const p={},o=(0,a(3744).Z)(p,[["render",function(n,s){return s[0]||(s[0]=(0,t.uE)('<h2 id="格式化当前时间" tabindex="-1"><a class="header-anchor" href="#格式化当前时间" aria-hidden="true">#</a> 格式化当前时间</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * datetime new Date\n * \n * type    Y-M-D h:min:s Y-M-D h:min:s h:min\n * */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">formateDate</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">datetime<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token keyword">var</span> year <span class="token operator">=</span> datetime<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t\t\t\tmonth <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>datetime<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t\t\t\tdate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t\t\t\thour <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t\t\t\tminute <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t\t\t\tsecond <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;Y-M-D h:min:s&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token keyword">var</span> result <span class="token operator">=</span> year <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> date <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> hour <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> minute <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> second<span class="token punctuation">;</span>\n\t\t\t\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;Y-M-D&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token keyword">var</span> result <span class="token operator">=</span> year <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> date<span class="token punctuation">;</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;h:min:s&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token keyword">var</span> result <span class="token operator">=</span> hour <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> minute <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> second<span class="token punctuation">;</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&quot;h:min&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token keyword">var</span> result <span class="token operator">=</span> hour <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> minute<span class="token punctuation">;</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t<span class="token keyword">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>',2))}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);