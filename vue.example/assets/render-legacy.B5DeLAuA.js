System.register(["./vue-legacy.DLvkimME.js","./vue-router-legacy.D6MJ89Gz.js","./@vue-legacy.wX-ntIMg.js","./file-saver-legacy.BjvD2PTr.js","./html-to-image-legacy.ExDT8R_3.js","./index-legacy.1rI7gsIP.js","./ace-builds-legacy.CeUfEwnB.js","./vuex-legacy.DcjacnyB.js","./path-browserify-legacy.Bz6KLGVb.js","./@vueuse-legacy.D0fwEmGo.js","./axios-legacy._wDLtYbU.js","./js-cookie-legacy.DG9X5X6R.js","./element-plus-legacy.Bn3TXEuQ.js","./lodash-es-legacy.DhJsfqAD.js","./@element-plus-legacy.ByEY-7rH.js","./@popperjs-legacy.CtArNnFZ.js","./@ctrl-legacy.BxnR6uzU.js","./dayjs-legacy.Ct_fdRRT.js","./async-validator-legacy.DmN8ALBH.js","./memoize-one-legacy.BFFEFRop.js","./normalize-wheel-es-legacy.BGuSd53u.js","./@floating-ui-legacy.DrPNJd52.js","./nprogress-legacy.DoK-y1pE.js","./animate.css-legacy.BfzBEcwY.js","./element-easy-form-legacy.CTBGSH2R.js","./mockjs-legacy.f5ttm7Vm.js","./vuedraggable-legacy.90WDJwJF.js","./sortablejs-legacy.tfgKSJed.js","./vue3-ace-editor-legacy.1GmseHPH.js","./resize-observer-polyfill-legacy.0iJwNYH9.js","./uuid-legacy.8hFDIvAG.js"],(function(n,t){"use strict";var e,i,o,s,a,r,l,d,p,c,u,h,m,g,v,f,x,y,b,w,k,C;return{setters:[null,n=>{e=n.u,i=n.a},n=>{o=n.d,s=n.r,a=n.bS,r=n.bW,l=n.bT,d=n.v,p=n.f,c=n.h,u=n.o,h=n.c,m=n.i,g=n.j,v=n.u,f=n.bU,x=n.bV,y=n.a,b=n.m},n=>{w=n.F},n=>{k=n.t},n=>{C=n._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){var t=document.createElement("style");t.textContent=".renderEchartsEdit[data-v-1a68650b]{width:100%;height:calc(100vh - 114px);position:relative}.renderEchartsEdit .repl[data-v-1a68650b]{width:100%;height:100%}.renderEchartsEdit .renderEcharts[data-v-1a68650b]{position:absolute;right:30px;bottom:20px}\n",document.head.appendChild(t);const D={"App.vue":'\n     \n\n     \n\n      <template>\n      <div\n        class="content"\n      >\n      <stepsCard :data="data" />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import stepsCard from "./stepsCard.vue";\n        const data = [\n      {\n        name: "第一步",\n        active: true,\n        time: "12:00:00",\n        date: "2021-01-01 ",\n      },\n      {\n        name: "第二步",\n        active: true,\n        time: "12:00:00",\n        date: "2021-01-01 ",\n      },\n      {\n        name: "第三步",\n        active: false,\n        time: "12:00:00",\n        date: "2021-01-01 ",\n      },\n    ];\n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n    .content{\n      width: 100%;\n      background:#042C67;\n      padding-top:300px;\n      height: 492px; display: flex;justify-content: center;\n    }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/stepsCard.vue":'\n\n      <template>\n      <div\n        class="stepsCard "\n        :style="{\n          width: stepsWidth + \'px\',\n        }"\n      >\n        <template v-for="(item, index) in props.data" :key="index">\n          <div :class="[\'defaultStep\']">\n            <div\n              class="active"\n              v-if="index == active"\n              :style="{ width: stepCurrentWidth + \'px\' }"\n            ></div>\n            <div class="stepTop" v-if="item.active">\n              <div>\n                {{ item.date }}\n              </div>\n              <div>\n                {{ item.time }}\n              </div>\n            </div>\n            <div class="title">\n              {{ item.name }}\n            </div>\n          </div>\n        </template>\n        <div\n          class="stepsActiveBox"\n          v-for="(item, index) in active"\n          :key="item"\n          :style="{\n            left: stepWidth * (index + 1) - 12 + \'px\',\n            background: `linear-gradient(82deg, ${getCurrentColor(index + 1)[0]} 0%,\n                      ${getCurrentColor(index + 1)[1]} 100%)`,\n          }"\n        ></div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n    const props = defineProps({\n      data: {\n        type: Array,\n        default: () => [],\n      },\n      stepsWidth: {\n        type: Number,\n        default: 500,\n      },\n    });\n    \n    /*\n        基本数据类型\n        引用数据类型（复杂类型） 个人建议 ref初始化变量 \n        ref 和 reactive 本质我们可以简单的理解为ref是对reactive的二次包装, \n        ref定义的数据访问的时候要多一个.value\n        */\n    const stepsWidth = computed(() => {\n      return props.stepsWidth;\n    });\n    const state = reactive({});\n    const stepNum = computed(() => {\n      return props.data.length - 1;\n    });\n    \n    const stepWidth = computed(() => {\n      return stepsWidth.value / stepNum.value;\n    });\n    const active = computed(() => {\n      let num = props.data.filter((item) => item.active);\n      console.log("num :>> ", num);\n      return num.length - 1;\n    });\n    \n    const stepCurrentWidth = computed(() => {\n      return stepWidth.value * active.value;\n    });\n    \n    const getColors = (steps) => {\n      function hexToRgb(hex) {\n        if (hex.length !== 7 || hex[0] !== "#") {\n          throw new Error("请输入正确的16进制颜色值，格式为：#RRGGBB");\n        }\n    \n        const r = parseInt(hex.slice(1, 3), 16);\n        const g = parseInt(hex.slice(3, 5), 16);\n        const b = parseInt(hex.slice(5, 7), 16);\n    \n        return [r, g, b];\n      }\n      function rgbToHex(rgbColor) {\n        // 将RGB值转换为16进制颜色值\n        return (\n          "#" +\n          rgbColor\n            .map(function(value) {\n              return value.toString(16).padStart(2, "0");\n            })\n            .join("")\n        );\n      }\n    \n      function interpolateColors(startColor, endColor, steps) {\n        // 计算两个颜色之间的渐变色\n        var startRgb = hexToRgb(startColor);\n        var endRgb = hexToRgb(endColor);\n        var diffRgb = startRgb.map(function(start, i) {\n          return (endRgb[i] - start) / steps;\n        });\n        var colors = [];\n        for (var step = 0; step <= steps; step++) {\n          var colorRgb = startRgb.map(function(start, i) {\n            return Math.round(start + diffRgb[i] * step);\n          });\n          colors.push(rgbToHex(colorRgb));\n        }\n        return colors;\n      }\n    \n      // 示例用法\n      var startColor = "#016eea";\n      var endColor = "#2fd3fe";\n      var gradientColors = interpolateColors(startColor, endColor, steps);\n      return gradientColors;\n    };\n    /**\n     * 获取当前节点背景色\n     */\n    const getCurrentColor = (steps) => {\n      console.log("stepWidth.value :>> ", stepWidth.value);\n      let data = [];\n      if (steps != active.value) {\n        data.push(\n          getColors(stepCurrentWidth.value)[Math.floor(stepWidth.value * steps)]\n        );\n        data.push(\n          getColors(stepCurrentWidth.value)[\n            Math.floor(stepWidth.value * steps + 26)\n          ]\n        );\n      } else {\n        data.push(\n          getColors(stepCurrentWidth.value)[Math.floor(stepWidth.value * steps)]\n        );\n        data.push(\n          getColors(stepCurrentWidth.value)[Math.floor(stepWidth.value * steps)]\n        );\n      }\n      return data;\n    };\n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .stepsCard {\n      width: 100%;\n      height: 12px;\n      background: rgba(59, 130, 253, 0.2);\n      position: relative;\n      align-items: center;\n      justify-content: space-between;\n      display: flex;\n    }\n    .stepsCard:before {\n      content: "";\n      position: absolute;\n      width: 26px;\n      height: 26px;\n      background: #016eea;\n      border-radius: 50%;\n      bottom: -9px;\n      left: -14px;\n    \n      z-index: 2;\n    }\n    \n    .defaultStep {\n      position: relative;\n      height: 12px;\n      background: transparent;\n    }\n    .defaultStep::before {\n      content: "";\n      position: absolute;\n      width: 26px;\n      height: 26px;\n      background: #0d377e;\n      border-radius: 50%;\n      bottom: -8px;\n      right: -12px;\n    }\n    .active {\n      width: 100%;\n      height: 12px;\n      position: absolute;\n      transform: translateX(-100%);\n      background: linear-gradient(82deg, #016eea 0%, #2fd3fe 100%);\n    }\n    \n    .title {\n      position: absolute;\n      white-space: nowrap;\n      bottom: -40px;\n      left: 0;\n      transform: translateX(-50%);\n      font-size: 12px;\n      font-weight: 500;\n      font-size: 14px;\n      color: #d3e4fe;\n    }\n    .stepTop {\n      position: absolute;\n      white-space: nowrap;\n      top: -60px;\n      text-align: center;\n      left: 0;\n      transform: translateX(-50%);\n      font-size: 12px;\n      font-weight: 500;\n      font-size: 14px;\n      color: #d3e4fe;\n    }\n    .stepsActiveBox {\n      position: absolute;\n      bottom: -8px;\n      left: 0;\n      width: 26px;\n      height: 26px;\n      background: #0d377e;\n      border-radius: 50%;\n    }\n    </style>\n    \n      \n      '},j={"App.vue":'\n\n      <template>\n      <div\n        class="content"\n      >\n      <show1   />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show1 from "./show1.vue";\n  \n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        width: 100%;\n        padding-top:100px;\n        background:#042C67;\n        height: 492px; display: flex;justify-content: center;\n  }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/show1.vue":'\n\n\n      <template>\n      <div\n        class="show1Box"\n      :style="{\n        width:width+\'px\',\n        height:height+\'px\',\n      }"\n      >\n      <img src="/vue.example/static/show1.png"\n    class="image1"\n       alt="" />\n             <img src="/vue.example/static/card1.png"\n    class="showIcon"\n       alt="" />\n       <div class="title">{{item.title}}</div>\n         <div class="subTitle">{{item.subTitle}}</div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n  const props =  defineProps({\n     width:{\n        type:Number,\n        default:162 \n      },\n        height:{\n        type:Number,\n        default:199\n      },\n      item:{\n        type:Object,\n        default:()=>{\n          return {\n            icon:"/vue.example/static/card1.png",\n            title:"3200",\n            subTitle:"已回款(万元)"\n          }\n        }\n      }\n});\n\n \n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show1Box{\n      position: relative;\n    }\n    .image1{\n        width:100%;\n  height: 100%;\n    }\n    .title{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);\n   bottom:55px;\nfont-weight: 800;\nfont-size: 24px;\ncolor: #0BF9FE;\n    }\n\n        .subTitle{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   bottom:35px;\nfont-weight: 400;\nfont-size: 14px;\ncolor: #FFFFFF;\n    }\n    .showIcon{\n              z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   top:35px;\n   width:40px;\n   height:40px;\n    }\n    </style>\n    \n      \n      \n    \n      \n      '},T={"App.vue":'\n\n      <template>\n      <div class="content">\n        <show2 />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show2 from "./show2.vue";\n    \n    onMounted(() => {});\n    <\/script>\n    \n    <style scoped>\n    .content {\n      width: 100%;\n      padding-top: 100px;\n      background: #042c67;\n      height: 492px;\n      display: flex;\n      justify-content: center;\n    }\n    </style>\n    \n    \n    \n      ',"src/show2.vue":'\n\n      <template>\n      <div\n        class="show2Box"\n        :style="{\n          width: width + \'px\',\n          height: \'100%\',\n        }"\n      >\n        <div class="rotateBox">\n          <div class="rotateContent">\n            <div class="rotateItem">\n              <div class="routeText1">\n                1022\n              </div>\n              <div class="routeText2">\n              购物车数量\n              </div>\n            </div>\n            <div class="rotateItem">\n              <div class="routeText1">\n                860\n              </div>\n              <div class="routeText2">\n              购物车数量\n              </div>\n            </div>\n            <div class="rotateItem">\n              <div class="routeText1">\n                1022\n              </div>\n              <div class="routeText2">\n              购物车数量\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n    const props = defineProps({\n      width: {\n        type: Number,\n        default: 600,\n      },\n      height: {\n        type: Number,\n        default: 600,\n      },\n      item: {\n        type: Object,\n        default: () => {\n          return {\n            icon: "/vue.example/static/card1.png",\n            title: "3200",\n            subTitle: "已回款(万元)",\n          };\n        },\n      },\n    });\n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show2Box {\n      position: relative;\n    }\n    \n    .rotateBox {\n      width: 600px;\n      margin: 100px auto;\n      height: 136px;\n      background-image: url(/vue.example/static/yuanpan.png);\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: 100% 100%;\n      position: relative;\n    }\n    .rotateContent {\n      height: 100%;\n      position: relative;\n      width: 100%;\n    }\n    .rotateItem {\n      height: 137px;\n      width: 142px;\n      position: absolute;\n      top: 0;\n      left: 230px;\n    }\n    \n    .routeText1 {\n      font-weight: 800;\n      font-size: 30px;\n      color: #ffffff;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      position: absolute;\n    }\n    .routeText2 {\n      font-weight: 500;\n      font-size: 16px;\n      color: #d3e4fe;\n      left: 50%;\n      bottom: 0;\n      transform: translateX(-50%) translateY(150%);\n      position: absolute;\n      white-space: nowrap;\n    }\n    \n    .rotateContent .rotateItem:nth-child(1) {\n      transform: translateX(-250px) scale(0.85);\n      background-image: url(/vue.example/static/feipan.png);\n      background-repeat: no-repeat;\n      background-position: center;\n      top: -30px;\n      background-size: 100% 100%;\n    }\n    \n    .rotateContent .rotateItem:nth-child(2) {\n      transform: translateX(0) scale(1);\n      background-image: url(/vue.example/static/feipan.png);\n      background-repeat: no-repeat;\n      background-position: center;\n      top: 30px;\n      background-size: 100% 100%;\n    }\n    \n    .rotateContent .rotateItem:nth-child(3) {\n      background-image: url(/vue.example/static/feipan.png);\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: 100% 100%;\n      top: -30px;\n      transform: translateX(250px) scale(0.85);\n    }\n    </style>\n    \n      \n      \n    \n      \n      '},z={"App.vue":'\n\n\n      <template>\n      <div class="content">\n        <show3 />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show3 from "./show3.vue";\n    \n    onMounted(() => {});\n    <\/script>\n    \n    <style scoped>\n    .content {\n      width: 100%;\n      background: #03286D;\n      height: 492px;\n      display: flex;\n      justify-content: center;\n    }\n    </style>\n    \n    \n    \n      \n    \n    \n      ',"src/show3.vue":'\n\n      <template>\n      <div\n        class="show3Box"\n        :style="{\n          width: width + \'px\',\n          height: \'100%\',\n        }"\n      >\n             <div class="rotateContent">\n        <div class="rotateContentText">\n          {{title}}\n        </div>\n            <div v-for="(item,index) in getNums" :key="index" class="rotateItem">\n          {{item}}\n        </div>\n          </div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n    const props = defineProps({\n      width: {\n        type: Number,\n        default: 600,\n      },\n      height: {\n        type: Number,\n        default: 600,\n      },\n      number: {\n        type: Number,\n        default: 1392,\n      },\n        title: {\n        type: String,\n        default:"装配时长(天)",\n      },\n    });\n    const getNums = computed(()=>{\n      let data = String(props.number).split(\'\');\n      return data\n    })\n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show3Box {\n      position: relative;\n    }\n    .rotateContent {\n      height: 100%;\n      position: relative;\n        display: flex;\n      align-items: center;\n      width: 100%;\n    }\n    .rotateContentText{\n    font-weight: bold;\n    font-size: 20px;\n    color: #D3E4FE;\n    line-height: 60px;\n    text-align: center;\n    margin-right:10px;\n    }\n    .rotateItem {\n      height: 60px;\n      width: 44px;\n      margin-right:10px;\n      background-image: url(/vue.example/static/numbg.png);\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: 100% 100%;\n      font-weight: bold;\n    font-size: 34px;\n    color: #D3E4FE;\n    line-height: 60px;\n    text-align: center;\n    font-style: normal;\n    text-transform: none;\n    }\n    </style>\n    \n      \n    \n      \n      '},M={"App.vue":'\n\n\n\n\n      <template>\n      <div class="content">\n        <show4>\n              <template #img>\n      <img src="/vue.example/static/show4.png"\n    class="image1"\n       alt="" />\n    </template>\n        <template #title>\n            <div class="text1">\n              发料单据数量\n            </div>\n    </template>\n     <template #value>\n  <div class="text2">\n              1321\n            </div>\n    </template>\n          </show4>\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show4 from "./show4.vue";\n    \n    onMounted(() => {});\n    <\/script>\n    \n    <style scoped>\n    .content {\n      width: 100%;\n      background: #03286D;\n      height: 492px;\n      display: flex;\n      justify-content: center;\n    }\n    .image1{\n      width:99.26px;\n      height:121.13px;\n    }\n    .text1{\nfont-weight: 400;\nfont-size: 16px;\ncolor: #D3E4FE;\n    }\n        .text2{\nfont-weight: bold;\nfont-size: 24px;\ncolor: #C5C1FF;\ntext-shadow: 0px 3px 6px #1900FF;\n    }\n    </style>\n    \n    \n    \n      \n    \n    \n      \n    \n      ',"src/show4.vue":'\n\n      \n\n      <template>\n      <div\n        class="show4Box"\n   \n      >\n            <slot name="img">\n\n            </slot>\n            <div class="show4Left" :style="styles">\n               <div >\n               <slot name="title">\n\n            </slot>\n            </div>\n             <div>\n               <slot name="value">\n\n            </slot>\n            </div>\n            </div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n    const props = defineProps({\n      styles:{\n        type:{\n          type:Object,\n          defaule:()=>{\n            return {\n              \n            }\n          }\n        }\n      }\n    });\n    const getNums = computed(()=>{\n      let data = String(props.number).split(\'\');\n      return data\n    })\n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show4Box {\n      position: relative;\n        display: flex;\n          align-items: center;\n    }\n    .show4Left{\n        margin-left: 16px;\n    }\n    </style>\n    \n      \n    \n      \n      \n      \n      '},E={"App.vue":'\n\n      <template>\n      <div\n        class="content"\n      >\n      <show5   />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show5 from "./show5.vue";\n  \n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        width: 100%;\n        padding-top:100px;\n        background:#042C67;\n        height: 492px; display: flex;justify-content: center;\n  }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/show5.vue":'\n\n\n\n      <template>\n      <div\n        class="show5Box"\n      :style="{\n        width:width+\'px\',\n        height:height+\'px\',\n      }"\n      >\n      <img src="/vue.example/static/show5.png"\n    class="image1"\n       alt="" />\n      \n       <div class="title">{{item.title}}</div>\n         <div class="subTitle">{{item.subTitle}}</div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n  const props =  defineProps({\n     width:{\n        type:Number,\n        default:162 \n      },\n        height:{\n        type:Number,\n        default:199\n      },\n      item:{\n        type:Object,\n        default:()=>{\n          return {\n            icon:"/vue.example/static/card1.png",\n            title:"3200",\n            subTitle:"已回款(万元)"\n          }\n        }\n      }\n});\n\n \n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show5Box{\n      position: relative;\n    }\n    .image1{\n        width:100%;\n  height: 100%;\n    }\n    .title{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);\n   top:25px;\nfont-weight: 800;\nfont-size: 24px;\ncolor: rgba(11, 249, 254, 1);\n    }\n\n        .subTitle{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   bottom:10px;\nfont-weight: 400;\nfont-size: 14px;\ncolor: #FFFFFF;\n    }\n    .showIcon{\n              z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   top:35px;\n   width:40px;\n   height:40px;\n    }\n    </style>\n    \n      \n      \n    \n      \n      \n    \n      \n      '},B={"App.vue":'\n\n\n\n      <template>\n      <div\n        class="content"\n      >\n      <show6   />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show6 from "./show6.vue";\n  \n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        width: 100%;\n        padding-top:100px;\n        background:#03306B;\n        height: 492px; display: flex;justify-content: center;\n  }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/show6.vue":'\n\n\n\n\n\n      <template>\n      <div\n        class="show6Box"\n      :style="{\n        width:width+\'px\',\n        height:height+\'px\',\n      }"\n      >\n      <img src="/vue.example/static/show6.png"\n    class="image1"\n       alt="" />\n      \n       <div class="title">{{item.title}}</div>\n         <div class="subTitle">{{item.subTitle}}</div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n  const props =  defineProps({\n     width:{\n        type:Number,\n        default:120\n      },\n        height:{\n        type:Number,\n        default:100\n      },\n      item:{\n        type:Object,\n        default:()=>{\n          return {\n            icon:"/vue.example/static/card1.png",\n            title:"3200",\n            subTitle:"已回款(万元)"\n          }\n        }\n      }\n});\n\n \n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show6Box{\n      position: relative;\n    }\n    .image1{\n        width:100%;\n  height: 100%;\n    }\n    .title{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);\n   top:-5px;\n white-space: nowrap;\n\nwidth: 68px;\nheight: 40px;\nfont-weight: 800;\nfont-size: 28px;\ncolor: #83D7FF;\n    }\n\n        .subTitle{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   bottom:-15px;\nfont-weight: 400;\nfont-size: 16px;\n white-space: nowrap;\ncolor: #FFFFFF;\n    }\n    .showIcon{\n              z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   top:35px;\n   width:40px;\n   height:40px;\n    }\n    </style>\n    \n      \n      \n    \n      \n      \n    \n      \n      \n    \n      \n      '},F={"App.vue":'\n\n\n\n      <template>\n      <div\n        class="content"\n      >\n      <show7   />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import show7 from "./show7.vue";\n  \n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        width: 100%;\n        padding-top:100px;\n        background:#03306B;\n        height: 492px; display: flex;justify-content: center;\n  }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/show7.vue":'\n\n\n\n\n\n\n\n\n      <template>\n      <div\n        class="show7Box"\n      :style="{\n        width:width+\'px\',\n        height:height+\'px\',\n      }"\n      >\n      <img src="/vue.example/static/show7.png"\n    class="image1"\n       alt="" />\n      \n       <div class="title" :style="styles">{{item.title}}</div>\n         <div class="subTitle">{{item.subTitle}}</div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n    } from "vue";\n  const props =  defineProps({\n     width:{\n        type:Number,\n        default:120\n      },\n        height:{\n        type:Number,\n        default:100\n      },\n        styles:{\n        type:Object,\n        default:()=>{\n          return {\n           \n          }\n        }\n      },\n      item:{\n        type:Object,\n        default:()=>{\n          return {\n            title:"3200",\n            subTitle:"已回款(万元)"\n          }\n        }\n      }\n});\n\n \n    \n    onUpdated(() => {});\n    <\/script>\n    \n    <style scoped>\n    .show7Box{\n      position: relative;\n    }\n    .image1{\n        width:100%;\n  height: 100%;\n    }\n    .title{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);\n   top:-10px;\n white-space: nowrap;\n\nwidth: 68px;\nheight: 40px;\nfont-weight: 800;\nfont-size: 30px;\ncolor: #83D7FF;\n    }\n\n        .subTitle{\n        z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   bottom:-30px;\nfont-weight: 400;\nfont-size: 16px;\n white-space: nowrap;\ncolor: #D3E4FE;\n    }\n    .showIcon{\n              z-index: 1;\n  position: absolute;\n  left:50%;\n   transform: translateX(-50%);  \n   top:35px;\n   width:40px;\n   height:40px;\n    }\n    </style>\n    \n      \n      \n    \n      \n      \n    \n      \n      \n    \n      \n      \n      \n    \n      \n      '},I={"App.vue":'\n     \n\n     \n\n      <template>\n      <div\n        class="content"\n      >\n      <ProgressBarCard :data="data" />\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import ProgressBarCard from "./ProgressBarCard.vue";\n        const data = [\n      {\n        name: "第一步",\n        active: true,\n        time: "12:00:00",\n        date: "2021-01-01 ",\n      },\n      {\n        name: "第二步",\n        active: true,\n        time: "12:00:00",\n        date: "2021-01-01 ",\n      },\n   \n    ];\n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n    .content{\n      width: 100%;\n      background:#042C67;\n      padding-top:300px;\n      height: 492px; display: flex;justify-content: center;\n    }\n    </style>\n    \n    \n      \n      \n    \n    \n      \n      \n    \n    \n      ',"src/ProgressBarCard.vue":'\n\n      <template>\n      <div\n        class="stepsCard "\n        :style="{\n          width: stepsWidth + \'px\',\n        }"\n      >\n        <template v-for="(item, index) in props.data" :key="index">\n          <div :class="[\'defaultStep\']">\n       \n            <div class="stepTop" >\n              <div>\n                {{ item.date }}\n              </div>\n              <div>\n                {{ item.time }}\n              </div>\n            </div>\n            <div class="title">\n              {{ item.name }}\n            </div>\n          </div>\n        </template>\n             <div\n              class="active"\n              v-if="resultWidth"\n              :style="{ \n                \n                width: resultWidth*stepsWidth + \'px\' }"\n            ></div>\n        <div\n          class="stepsActiveBox"\n       \n        >\n        {{resultWidth}}\n        </div>\n      </div>\n    </template>\n    \n    <script setup>\n    import {\n      ref,\n      reactive,\n      defineEmits,\n      onMounted,\n      onUpdated,\n      computed,\n      watch,\n    } from "vue";\n    const props = defineProps({\n      data: {\n        type: Array,\n        default: () => [],\n      },\n      stepsWidth: {\n        type: Number,\n        default: 500,\n      },\n    });\n    \n    /*\n        基本数据类型\n        引用数据类型（复杂类型） 个人建议 ref初始化变量 \n        ref 和 reactive 本质我们可以简单的理解为ref是对reactive的二次包装, \n        ref定义的数据访问的时候要多一个.value\n        */\n    const stepsWidth = computed(() => {\n      return props.stepsWidth;\n    });\n    // JavaScript Date utility functions\n    \n    // 计算两个日期之间的天数（不包含小时分钟秒）\n    function countDaysBetween(date1, date2) {\n      const startDate = new Date(date1);\n      const endDate = new Date(date2);\n      return Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n    }\n    \n    // 获取当前日期\n    function getCurrentDate() {\n      return new Date();\n    }\n    \n    // 主要函数：计算当前时间距离结束时间的天数，以及开始和结束时间总共有多少天\n    function calculateDaysBetweenDates(startDateStr, endDateStr, currentDate = null) {\n      if (!currentDate) {\n        currentDate = getCurrentDate();\n      }\n      \n      const startDate = new Date(startDateStr);\n      const endDate = new Date(endDateStr);\n      const daysToEndDate = countDaysBetween(currentDate, endDate);\n      const totalDays = countDaysBetween(startDate, endDate);\n    \n      return {\n        daysToEndDate: daysToEndDate,\n        totalDays: totalDays,\n      };\n    }\n    \n    // 使用示例\n    const resultDay = computed(() => {\n      if(props.data.length >= 2){\n          const startDateString = props.data[0].date;\n    const endDateString = props.data[1].date;\n    return calculateDaysBetweenDates(startDateString, endDateString)\n    }else{\n      return {\n        daysToEndDate: 0,\n        totalDays: 0,\n      }\n    }\n    \n      \n    });\n    const resultWidth = computed(() => {\n     \n    if(props.data.length >= 2){\n        \n    const {totalDays,daysToEndDate} = resultDay.value;\n    //计算 开始时间到当前时间过去多少天\n    console.log(daysToEndDate,totalDays, (1 - (daysToEndDate / totalDays)) );\n    return daysToEndDate<0?1:  (1 - (daysToEndDate / totalDays)) \n    }else{\n      return false\n    }\n      \n    });\n     \n    \n    <\/script>\n    \n    <style scoped>\n    .stepsCard {\n      width: 100%;\n      height: 12px;\n      background: rgba(59, 130, 253, 0.2);\n      position: relative;\n      align-items: center;\n      justify-content: space-between;\n      display: flex;\n    }\n    .stepTop {\n      position: absolute;\n      white-space: nowrap;\n      top: -60px;\n      text-align: center;\n      left: 0;\n      transform: translateX(-50%);\n      font-size: 12px;\n      font-weight: 500;\n      font-size: 14px;\n      color: #d3e4fe;\n    }\n    .stepsCard:before {\n      content: "";\n      position: absolute;\n      width: 26px;\n      height: 26px;\n      background: rgba(59, 130, 253, 1);\n      border-radius: 50%;\n      bottom: -9px;\n      left: -14px;\n    \n      z-index: 2;\n    }\n    \n    .defaultStep {\n      position: relative;\n      height: 12px;\n      background: transparent;\n    }\n    .defaultStep::before {\n      content: "";\n      position: absolute;\n      width: 26px;\n      height: 26px;\n      background: #0d377e;\n      border-radius: 50%;\n      bottom: -8px;\n      right: -12px;\n    }\n    .active {\n      width: 100%;\n      height: 12px;\n      position: absolute;\n      background: rgba(59, 130, 253, 1);\n    }\n    \n    .title {\n      position: absolute;\n      white-space: nowrap;\n      bottom: -40px;\n      left: 0;\n      transform: translateX(-50%);\n      font-size: 12px;\n      font-weight: 500;\n      font-size: 14px;\n      color: #d3e4fe;\n    }\n\n    .stepsActiveBox {\n      position: absolute;\n      bottom: -8px;\n      right: -12px;\n      width: 26px;\n      height: 26px;\n      background: rgba(59, 130, 253, 1);\n      border-radius: 50%;\n    }\n    </style>\n    \n      \n      '},W={"App.vue":'\n\n      \n\n      \n\n      <template>\n      <div\n        class="content"\n      >\n        <div style="height:900px;width:100%">\n          <h1 style="color:#FFF;text-align:center">滑动体验懒加载图片案例</h1>\n        </div>\n      <lazyLoaded1 style="height:300px;width:100%">\n        <image1 />\n        </lazyLoaded1>\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    import lazyLoaded1 from "./lazyLoaded1.vue";\n    import image1 from "./image1.vue";\n    \n    onMounted(() => {\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        width: 100%;\n        padding-top:100px;\n        background:#042C67;\n        overflow-y: auto;\n        height: 492px; \n  }\n    </style>\n      \n      \n      \n      ',"src/image1.vue":'\n      <template>\n        <img class="image" src="/vue.example/echarts/FunnelPlot2.png" />\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    onMounted(() => {});\n \n    <\/script>\n    \n    <style scoped>\n    .image{\n      width: 100%;\n      height: 100%;\n    }\n    </style>\n    \n      \n      ',"src/lazyLoaded1.vue":'\n    <template>\n    <div  class="contentLazy" ref="lazyLoaded">\n          <slot v-if="show"></slot>\n    \n          \x3c!-- 蒙层 加载动画 --\x3e\n           <div class="loadingBox" v-if="show&&loading">\n            <div class="loading">\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n            <div class="item"></div>\n        </div>\n           </div>\n        </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    onMounted(() => {});\n    const show = ref(false);\n    const lazyLoaded = ref();\n    const props = defineProps({\n      // 定义props\n      loading: {\n        type: Boolean,\n        default: false,\n      },\n    });\n    // 定义回调函数\n    const callback = (entries, observer) => {\n      entries.forEach((entry) => {\n        // entry 对象包含了目标元素的信息\n        if (entry.isIntersecting) {\n          // 如果元素进入了视口，则执行相应操作\n        //   console.log("如果元素进入了视口，则执行相应操作");\n          show.value = true;\n           observer.unobserve(entry.target);\n          // 在这里执行比如加载图片、动画开始等操作\n        } else {\n          // 如果元素离开了视口，也可以执行相应操作\n        //   console.log("如果元素离开了视口，也可以执行相应操作");\n        }\n      });\n    };\n    \n    // 定义配置对象\n    const options = {\n      root: null, // 默认值，表示相对于视口计算交叉状态\n      rootMargin: "0px", // 可以添加额外的外边距来扩大或缩小根元素的边缘\n      threshold: 0.5, // 数组形式的阈值，元素至少有多少比例在视口内时触发回调\n      // 例如：[0, 0.25, 0.5, 1] 表示从0%到100%都会触发回调\n    };\n    \n    // 创建 IntersectionObserver 实例\n    const observer = new IntersectionObserver(callback, options);\n    onMounted(() => {\n      nextTick(() => {\n        observer.observe(lazyLoaded.value);\n      });\n    });\n    <\/script>\n    \n    <style scoped>\n    .contentLazy {\n      /* width: 100%;\n      height: 100%; */\n      position: relative;\n    }\n    .loadingBox{\n         position: absolute;\n         width: 100%;\n         height: 100%;\n         top: 0;\n         left: 0;\n         z-index: 99999999;\n         background-color: #00175A;\n    }\n         /* 设置位置 */\n            .loading {\n                position: absolute;\n                /* 居中 */\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                /* 高度 */\n                height: 40px;\n                /* 弹性布局 */\n                display: flex;\n                /* 设置子项在y轴方向居中，应该是设置起点在中间，非常有用，不然动画很怪 */\n                align-items: center;\n            }\n    \n            /* 小竖条 */\n            .item {\n                height: 50px;\n                width: 5px;\n                background: #D3E4FE;\n                /* 加margin，使竖条之间有空隙 */\n                margin: 0px 3px;\n                /* 圆角 */\n                border-radius: 10px;\n                /* 动画：名称、时间、循环 */\n                animation: loading 1s infinite;\n            }\n    \n            /* 设置动画 */\n            @keyframes loading {\n                0% {\n                    height: 0px;\n                }\n    \n                50% {\n                    height: 50px;\n                }\n    \n                100% {\n                    height: 0px;\n                }\n            }\n    \n            /* 为每一个竖条设置延时 */\n            .item:nth-child(2) {\n                animation-delay: 0.1s;\n            }\n    \n            .item:nth-child(3) {\n                animation-delay: 0.2s;\n            }\n    \n            .item:nth-child(4) {\n                animation-delay: 0.3s;\n            }\n    \n            .item:nth-child(5) {\n                animation-delay: 0.4s;\n            }\n    \n            .item:nth-child(6) {\n                animation-delay: 0.5s;\n            }\n    \n            .item:nth-child(7) {\n                animation-delay: 0.6s;\n            }\n    \n            .item:nth-child(8) {\n                animation-delay: 0.7s;\n            }\n    </style>\n    \n      \n      '},S={"App.vue":'\n\n\n\n  \n\n\n\n      <template>\n      <div\n        class="content"\n      >\n        \t<span class="start-taste-line">\n\t\t\t\t\t<view v-for="(item,index) in recordList" :key="index" :class="[\'Record\']" :style="{\n\t\t\t\t\t\t transform:`scaleY(${item.height})`,\n\t\t\t\t\t }" />\n\t\t\t\t\t\n\t\t\t\t</span>\n      </div>\n    </template>\n    \n    <script setup>\n    import { ref, reactive, nextTick, onMounted, watch } from "vue";\n    const\trecordList= ref([{\n\t\t\t\t\t\t"id": 1,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 2,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 3,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 4,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 5,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 6,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 7,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 8,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 9,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 10,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 11,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 12,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 13,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 14,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 15,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 16,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 17,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 18,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 19,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t"id": 20,\n\t\t\t\t\t\t"height": 0\n\t\t\t\t\t}\n\t\t\t\t])\n                function getRandomInt(min, max) {\n\t\t\t\t\tmin = Math.ceil(min);\n\t\t\t\t\tmax = Math.floor(max);\n\t\t\t\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t\t\t\t}\n    function  \t\tgetHeightComputed(num, total) {\n\t\t\t\tconst t = total / 2 //获取 一般有多少\n\t\t\t\tconst arr = [t + 1]\n\t\t\t\t// console.log(t);\n\t\t\t\tfor (var i = 0; i < t; i++) {\n\t\t\t\t\tarr.push((t - i))\n\t\t\t\t}\n\t\t\t\tlet totals = []\n\t\t\t\tfor (var i = t; i < total; i++) {\n\t\t\t\t\ttotals.push(i)\n\t\t\t\t}\n\t\t\t\t// console.log(arr);\n\t\t\t\tif (num > t) {\n\t\t\t\t\t//说明靠后 6\n                    let max =totals.findIndex((res => res == num)) != -1 ? arr[totals.findIndex((res => res == num))] : 1\n\t\t\t\t\treturn getRandomInt(t,max) \n\t\t\t\t} else if (num < t) {\n\t\t\t\t\t//说明靠前\n                    return getRandomInt(num,t) \n\t\t\t\t} else {\n\t\t\t\t\treturn t\n\t\t\t\t}\n\t\t\t}\n\t\tfunction\tupdataHeight(time) {\n\t\t\t\t recordList.value.forEach((res, index) => {\n            //time+ Math.sin(this.getHeightComputed(index,20) * this.height)\n\t\t\t\t\tres.height =  getHeightComputed(index, 20) *\ttime \n\t\t\t\t})\n\t\t\t\t// t += speed;\n\t\t\t}\n    onMounted(() => {\n      let max = 5;\n\t\t\tlet min = 0\n     \n\t\t\tsetInterval(() => {\n\t\t\t\n\n\t\t\t\tupdataHeight(getRandomInt(min, max))\n\t\t\t}, 234)\n    });\n    <\/script>\n    \n    <style scoped >\n  .content{\n        padding-top:100px;\n        background:#042C67;\n        height: 492px; display: flex;justify-content: center;\n  }\n  \t.Record {\n\n\t\t\t\tbackground-color: red; \n\t\t\t\twidth: 3px;\n\t\t\t\theight: 1px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder: none;\n\t\t\t\tanimation-iteration-count: infinite;\n\t\t\t\tanimation-direction: alternate;\n\t\t\t}\n\n    </style>\n    \n      \n    \n      \n      \n    \n      '},X=Object.freeze(Object.defineProperty({__proto__:null,ProgressBar:I,animation1:S,lazyLoaded1:W,show1:j,show2:T,show3:z,show4:M,show5:E,show6:B,show7:F,steps:D},Symbol.toStringTag,{value:"Module"})),R={class:"white-bg"},A={class:"renderEcharts jcfend"};n("default",C(o({__name:"render",setup(n){e();const t=i();s("");const o=()=>{const n=document.getElementById("repl").querySelector("iframe");var e=(n.contentDocument||n.contentWindow.document).getElementById("app");k(e).then((n=>{w.saveAs(n,`${t.params.text}.png`)}))},{importMap:C,vueVersion:D,productionMode:j}=a({}),T=X[t.params.text],z=s({welcomeSFC:""}),M=s("App.vue"),E=s({});z.value.welcomeSFC=T[M.value];for(const e in T)if(Object.hasOwnProperty.call(T,e)){const n=T[e];e!=M.value&&(E.value[e]=new r(e,n,!1))}const B=l({vueVersion:D,builtinImportMap:C,template:z,files:E});return j.value=!0,s(!0),d({}),p((()=>{})),(n,t)=>{const e=c("el-button"),i=c("el-scrollbar");return u(),h("div",R,[m(i,{class:"renderEchartsEdit"},{default:g((()=>[m(v(f),{theme:"dark",layout:"1111",store:v(B),class:"repl",editor:v(x),id:"repl"},null,8,["store","editor"]),y("div",A,[m(e,{type:"primary",onClick:o},{default:g((()=>[b("下载图片")])),_:1})])])),_:1})])}}}),[["__scopeId","data-v-1a68650b"]]))}}}));
